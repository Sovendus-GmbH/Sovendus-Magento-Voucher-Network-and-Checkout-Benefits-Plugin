name: PHP Compatibility

on:
  push:
    branches: ["main", "dev"]
  pull_request:
    branches: ["main", "dev"]

jobs:
  php_checks:
    runs-on: ubuntu-latest
    env:
      MAGENTO_PUBLIC_KEY: ${{ secrets.MAGENTO_PUBLIC_KEY }}
      MAGENTO_PRIVATE_KEY: ${{ secrets.MAGENTO_PRIVATE_KEY }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: "7.4"
          tools: composer, phpcs, phpstan
          coverage: none

      - name: Switch to SovendusApp
        working-directory: SovendusApp
        run: pwd

      - name: Check Magento Auth Keys
        run: |
          if [ -z "${MAGENTO_PUBLIC_KEY}" ] || [ -z "${MAGENTO_PRIVATE_KEY}" ]; then
            echo "Magento authentication keys are not set."
            exit 1
          fi

      - name: Setup Magento Auth and Install Magento2 Stubs
        working-directory: SovendusApp
        run: |
          mkdir -p ~/.composer
          echo '{
            "http-basic": {
              "repo.magento.com": {
                "username": "${MAGENTO_PUBLIC_KEY}",
                "password": "${MAGENTO_PRIVATE_KEY}"
              }
            }
          }' > ~/.composer/auth.json
          composer require --dev magento/magento2-stubs:"dev-master" --update-with-dependencies

      - name: Install PHPCompatibility and PHP_CodeSniffer
        working-directory: SovendusApp
        run: |
          composer global require "squizlabs/php_codesniffer"
          composer global require "phpcompatibility/php-compatibility"
          PHPCS_PATH=$(composer global config bin-dir --absolute)/phpcs
          PHP_COMPATIBILITY_PATH=$(composer global config home)/vendor/phpcompatibility/php-compatibility
          $PHPCS_PATH --config-set installed_paths $PHP_COMPATIBILITY_PATH
          $PHPCS_PATH -i

      - name: Run PHP 7.0 Compatibility Check
        working-directory: SovendusApp
        run: |
          ~/.composer/vendor/bin/phpcs --standard=PHPCompatibility --runtime-set testVersion 7.0-7.0 . || exit 1

      - name: Lint PHP Files
        working-directory: SovendusApp
        run: |
          find . -name "*.php" -print0 | xargs -0 -n1 php -l

      - name: Install PHPStan for Static Analysis
        working-directory: SovendusApp
        run: |
          composer require --dev phpstan/phpstan
          vendor/bin/phpstan analyse -c phpstan.neon || exit 1
